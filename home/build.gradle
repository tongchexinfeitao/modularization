if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        //配置资源前缀
        resourcePrefix "home_"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //独立运行时，需要定包名
        if(!isModule){
            applicationId rootProject.ext.appId["home"]
        }
        //arouter需要配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    //资源配置
    sourceSets {
        main {
            //在组件模式下 使用不同的manifest文件
            if (isModule) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java.srcDirs 'src/main/debug/java', 'src/main/java'
                res.srcDirs 'src/main/debug/res', 'src/main/res'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies.appcompatv7
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //依赖基础库
    api project(':commonlib')
    //每个库必须声明arouter的注解处理器
    annotationProcessor rootProject.ext.dependencies["arouterProcessor"]

}
